

Activity-3

1. N+1			=  N
2. 1+1/N		=  1
3. (1+1/N)(1+2/N)	=  1
4. 2N^3-15N^2+N		=  N^3
5. lg(2N )/lg N		=  log2N
6. lg(N^2 + 1) / lg N	=  N^2

Activity-4

1. int count = 0;

            for(int i = 0; i < N; i++)
	{
                count++;
        }

	OUTPUT : N times.

2. int sum = 0;

            if(sum == 0)
	{
                sum++;
	}
	
	OUTPUT : 1 time.

3. for(int i = N; i > 0; i < N/2)
	{
            int sum = 0;
	}
	
	OUTPUT : Sysntax Error.

4. for(int i = 0; i < N; i++)
	{
         for(int j = 0; j < N; j++)
	{
              System.out.println(“Hello”);
        }
        }

	OUTPUT : N^2 times.

5.  for(int i = 0; i < N; i++)
	{
        for(int j = 0; j < N; j = j * 2)
	{
              System.out.println(“Hello”);
        }
        }
		
	OUTPUT : Infinite times. if j=1 then output will appear n/3 times.

6.  public int fibonacci(int number)
	{

	 if (number <= 1) 
	{
             return number;
        } 
	else 
	{
              return fibonacci(number - 1) + fibonacci(number - 2);
        }
	}

	OUTPUT : 1 time.


Activity-5

1. int sum = 0;
        for (int n = N; n > 0; n /= 2)
            for(int i = 0; i < n; i++)
                Sum++;

	OUTPUT : log2n times.

2. int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < i; j++)
                sum++;

	OUTPUT : nlogn times.

3. int sum = 0;
        for (int i = 1 i < N; i *= 2)
            for (int j = 0; j < N; j++)
                Sum++;

	OUTPUT : 